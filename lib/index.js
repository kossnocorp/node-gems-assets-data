// Generated by CoffeeScript 1.7.1
(function() {
  var GEMS_PATH_CMD, GEM_ASSET_PATTERN, GEM_ASSET_VENDOR_PATTERN, GemsAssetsData, Q, dir, exec;

  Q = require('q');

  dir = require('node-dir');

  exec = require('child_process').exec;

  GEM_ASSET_PATTERN = /gems\/([\w-\.]+)\/app\/assets\/javascripts$/i;

  GEM_ASSET_VENDOR_PATTERN = /gems\/([\w-\.]+)\/vendor\/assets\/javascripts$/i;

  GEMS_PATH_CMD = 'bundle exec ruby -e "print Gem.path.first"';

  GemsAssetsData = (function() {
    function _Class() {}

    _Class.prototype.path = function() {
      return this._path;
    };

    _Class.prototype.dirs = function() {
      return this._dirs;
    };

    _Class.prototype.setPath = function(path) {
      return this._path = path;
    };

    _Class.prototype.setDirs = function(dirs) {
      return this._dirs = dirs;
    };

    _Class.prototype.isResolved = function() {
      return this._isResolved;
    };

    _Class.prototype.setAsResolved = function() {
      return this._isResolved = true;
    };

    _Class.prototype.resolve = function() {
      var child, deferred;
      deferred = Q.defer();
      if (this.isResolved()) {
        return deferred.resolve();
      }
      child = exec(GEMS_PATH_CMD, (function(_this) {
        return function(error, output) {
          var gemsPath;
          gemsPath = output + '/gems';
          return dir.subdirs(gemsPath, function(error, subdirs) {
            var gemsDirs;
            gemsDirs = subdirs.filter(function(dir) {
              return GEM_ASSET_PATTERN.test(dir) || GEM_ASSET_VENDOR_PATTERN.test(dir);
            });
            _this.setPath(gemsPath);
            _this.setDirs(gemsDirs);
            _this.setAsResolved();
            return deferred.resolve();
          });
        };
      })(this)).on('exit', function(code) {
        child.kill();
        if (code !== 0) {
          return console.log("Child process exited with exit code " + code);
        }
      });
      return deferred.promise;
    };

    return _Class;

  })();

  module.exports = GemsAssetsData;

}).call(this);
